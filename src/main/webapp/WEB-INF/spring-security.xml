<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
   xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
     http://www.springframework.org/schema/security
     http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
    
   <http use-expressions="true">
       <intercept-url pattern="/" access="isAnonymous()" />
       <intercept-url pattern="/login" access="isAnonymous()" />
       <intercept-url pattern="/logout" access="isAnonymous()" />
 	   <intercept-url pattern="/css/style.css" access="isAnonymous()" />
 
       <intercept-url pattern="/userInfo.htm"
           access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN','ROLE_TEACHER','ROLE_STUDENT')" />
       <intercept-url pattern="/home.htm"
           access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
       <intercept-url pattern="/userHome.htm" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN','ROLE_TEACHER','ROLE_STUDENT')" />
       <intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
       <intercept-url pattern="/other/**" access="isAuthenticated()" />
       
 	   <intercept-url pattern="/changePassword.htm" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN','ROLE_TEACHER','ROLE_STUDENT')"/>
       <access-denied-handler error-page="/403.htm" />
 
       <form-login login-page='/login.htm' login-processing-url="/j_spring_security_check"
           default-target-url="/userHome.htm" always-use-default-target="false"
           authentication-failure-url="/login?error=true" username-parameter="username"
           password-parameter="password" />
 
       <logout logout-url="/j_spring_security_logout" logout-success-url="/login.htm"
           delete-cookies="JSESSIONID" invalidate-session="true" />
 
   </http>
 
   <authentication-manager>
       <!-- authentication from database -->
       <authentication-provider>
				<jdbc-user-service data-source-ref="dataSource"
					users-by-username-query=
						"SELECT username, password, 'true' as enabled 
						FROM users 
						WHERE username = ?"
					authorities-by-username-query=
						"SELECT users.username, authorities.role as authorities 
						FROM users, authorities  
						WHERE users.username = ? AND users.username = authorities.username" />
<!-- 				<password-encoder ref="passwordEncoder"> -->
<!-- 					<salt-source ref="saltSource" /> -->
<!-- 				</password-encoder> -->
       </authentication-provider>
 
   </authentication-manager>
 
 	 <beans:bean id="passwordEncoder" 
 	 	class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
	</beans:bean>
	
	<beans:bean id="saltSource"
		class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse" value="username" />
	</beans:bean>
	
</beans:beans>